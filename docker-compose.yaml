#__    __              __                                            __                          __
#  /  \  /  |            /  |                                          /  |                        /  |
#  $$  \ $$ |  ______   _$$ |_     ______    _______         _______  _$$ |_     ______    _______ $$ |   __
#  $$$  \$$ | /      \ / $$   |   /      \  /       |       /       |/ $$   |   /      \  /       |$$ |  /  |
#  $$$$  $$ |/$$$$$$  |$$$$$$/   /$$$$$$  |/$$$$$$$/       /$$$$$$$/ $$$$$$/    $$$$$$  |/$$$$$$$/ $$ |_/$$/
#  $$ $$ $$ |$$ |  $$ |  $$ | __ $$    $$ |$$      \       $$      \   $$ | __  /    $$ |$$ |      $$   $$<
#  $$ |$$$$ |$$ \__$$ |  $$ |/  |$$$$$$$$/  $$$$$$  |       $$$$$$  |  $$ |/  |/$$$$$$$ |$$ \_____ $$$$$$  \
#  $$ | $$$ |$$    $$/   $$  $$/ $$       |/     $$/       /     $$/   $$  $$/ $$    $$ |$$       |$$ | $$  |
#  $$/   $$/  $$$$$$/     $$$$/   $$$$$$$/ $$$$$$$/        $$$$$$$/     $$$$/   $$$$$$$/  $$$$$$$/ $$/   $$/

version: "3.7"

networks:
  notes:
    driver: bridge

services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: notes-laravel8-php-fpm-80
    container_name: app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./app:/var/www/app
      - ./public:/var/www/public
    depends_on:
      - nginx
    networks:
      - notes


  db:
    image: mysql:5.7.33
    build:
      context: ./docker/mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_USER: $MYSQL_USER
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - notes

  nginx:
    image: nginx:1.19.8-alpine
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - 8100:80
    volumes:
      - ./public:/var/www/public/app:ro
      - ./notes-api/public:/var/www/public/api:ro
    networks:
      - notes

  api:
    image: api
    build:
      context: ./notes-api
      dockerfile: Dockerfile
    ports:
      - 9000:9003
    working_dir: /var/www
    volumes:
      - ./notes-api/app:/var/www/app
      - ./notes-api/database:/var/www/database
      - ./notes-api/routes:/var/www/routes
      - ./notes-api/storage:/var/www/storage
      #.env can be populated using AWS encrypted keys on build, rather than keeping in VCS.
      # Hack for assessment demo purpose. Can either change notes-api/config/database.php as well.
      - ./notes-api/.env.example:/var/www/.env
    depends_on:
      - nginx
    environment:
      APP_ENV: local
      NOTES_ENV: $NOTES_ENV
      DEBUG: 1
      NO_CACHE: 1
      BASE_URL: /
      DB_HOST: ${DB_HOST:-db}
      DB_NAME: ${DB_DATABASE:-notes_dev}
      DB_USER: $DB_USERNAME
      DB_PASS: $DB_PASSWORD
      DB_PORT: $DB_PORT
    networks:
      - notes

  phpmyadmin:
    image: phpmyadmin:5.1.0-apache
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 8200:80
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root1234
    networks:
      - notes
